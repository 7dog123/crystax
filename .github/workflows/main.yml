 This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    run: |
     sudo dpkg --add-architecture i386
     sudo apt-get update
    container: ubuntu:bionic-20210827@sha256:09981dbb01195326bb445c88f1671a115363d40c68dab7f9680c68489bd3a6ca

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
        # Runs a single command using the runners shell
      - name: Install dependencies
        run: |
         export APT="sudo apt-get -y install"
         $APT bison flex libtool mingw-w64 git
         $APT pbzip2 texinfo python3 python3-lxml
         $APT git-core gnupg build-essential zip curl 
         $APT zlib1g-dev gcc-multilib g++-multilib
         $APT libncurses5 lib32ncurses5-dev x11proto-core-dev libx11-dev
         $APT lib32z1-dev libgl1-mesa-dev libxml2-utils xsltproc unzip fontconfig
         $APT gcc-9-locales python3-genshi python3-lxml-dbg
         $APT lib32stdc++6-9-dbg libx32stdc++6-9-dbg
         sudo apt-get autoclean

      # Runs a set of commands using the runners shell
      - name: Run ndk-crystax-r10-build.sh
        run: |
          chmod 755 ndk-crystax-r10-build.sh
          ./ndk-crystax-r10-build.sh
